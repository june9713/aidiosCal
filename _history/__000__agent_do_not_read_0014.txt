# History 0014: 월간/주간 일정 시간 중복 조정 문제 해결

## 작업 일시
2024년 작업 시작

## 문제 상황
- 사용자 보고: 월간 일정과 주간일정에서 스케쥴 테이블의 일정 시간에 +9가 한번 더 더해짐
- 이미 여러번 수정 요청했지만 제대로 동작하지 않음
- 차근차근 원인을 추적하기 위한 콘솔 로그와 크롬 디버그 콘솔 로그 추가 요청

## 분석한 문제 영역
1. **서버 측 (main.py)**:
   - `/gettimenow` 엔드포인트에서 9시간(32400초) 추가 (256라인)
   - 현재 시간에 9시간을 추가하여 한국 시간으로 조정

2. **클라이언트 측 (main.js)**:
   - `koreaTimeOffset = 9 * 60 * 60 * 1000` 여러 위치에서 사용 (742, 838, 1487, 2593라인)
   - 시간 비교 시 한국 시간으로 변환: `new Date(now.getTime() + koreaTimeOffset)`

3. **캘린더 로직 (calendar.js)**:
   - `getSchedulesForDate()` 함수에서 날짜 비교
   - `createWeeklyScheduleElement()` 함수에서 시간 계산
   - `new Date(schedule.date)`와 `new Date(schedule.due_time)` 처리

## 추가한 디버깅 로그

### 1. 서버 측 (app/routers/schedules.py)
- `read_schedules()` 함수에 시간 관련 로그 추가
- 날짜 필터링 과정 추적
- 반환되는 스케줄의 date, due_time, created_at 정보 로그

### 2. 클라이언트 측 (static/js/calendar.js)
- `loadSchedules()`: API에서 로드된 스케줄 데이터 로그
- `getSchedulesForDate()`: 날짜별 스케줄 필터링 과정 로그
- `createWeeklyScheduleElement()`: 주간 달력에서 시간 계산 과정 로그

### 3. 메인 로직 (static/js/main.js)
- `formatDateToMonthDay()`: 날짜 파싱 및 포맷팅 과정 로그
- `createScheduleRow()`: 일정 행 생성 시 시간 처리 로그

## 🎯 문제 원인 발견!

디버깅 로그를 통해 **핵심 문제**를 정확히 발견:

### 발견된 로그
```
getSchedulesForDate called with date: Sat Jul 12 2025 00:00:00 GMT+0900
dateStr for comparison: 2025-07-11  ← 하루 차이 발생!

Schedule "넥스트나인 공인인증서 갱신": 
raw date: 2025-06-02T01:02:00, converted: 2025-06-01  ← 하루 뒤로 밀림!
```

### 문제 원인
- `toISOString()` 메서드가 **UTC로 변환**하면서 GMT+9 시간대에서 9시간이 빠져 날짜가 변경됨
- `Sat Jul 12 2025 00:00:00 GMT+0900` → UTC 변환 → `2025-07-11T15:00:00.000Z` → 날짜 추출 → `2025-07-11`

## 🔧 적용한 수정사항

### 1. calendar.js - getSchedulesForDate() 함수
- `toISOString().split('T')[0]` 제거
- 로컬 시간대를 유지하는 날짜 비교 로직으로 변경:
```javascript
const year = date.getFullYear();
const month = (date.getMonth() + 1).toString().padStart(2, '0');
const day = date.getDate().toString().padStart(2, '0');
const dateStr = `${year}-${month}-${day}`;
```

### 2. calendar.js - createWeeklyScheduleElement() 함수  
- 시간 계산을 로컬 시간대 기준으로 수정
- 주간 달력에서 정확한 시간 위치 표시

### 3. main.js - renderSchedules() 함수
- `koreaTimeOffset` 및 `koreaToday` 사용 제거
- 로컬 시간 기준 오늘 날짜 문자열 생성

### 4. main.js - createScheduleRow() 함수
- `koreaTimeOffset` 및 `koreaNow` 사용 제거
- 로컬 시간 기준 마감일 비교

## 📋 스케줄 테이블 렌더링 문제 해결

### 추가 문제 발생
- 시간 문제 수정 후 스케줄 테이블이 비어있음
- DOM 선택자 문제와 초기화 순서 문제 발견

### 해결 과정
1. **DOM 선택자 수정**: `#schedule-table tbody` → `getElementById('schedule-body')`
2. **디버깅 로그 추가**: renderSchedules 함수에 상세 로그 추가
3. **초기화 순서 수정**: `showScheduleInterface()` 함수에 `main_loadSchedules()` 호출 추가

### 수정 내용
- `renderSchedules()` 함수에서 올바른 DOM 요소 선택
- 스케줄 데이터 로딩 확인 로그 추가
- 앱 초기화 시 스케줄 로딩 보장

## 결과
- 시간대 중복 변환 문제 해결
- 월간/주간 달력에서 정확한 날짜/시간 표시
- 스케줄 테이블 정상 렌더링
- 로컬 시간대를 일관되게 사용하여 시간 처리 단순화 